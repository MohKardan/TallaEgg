// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orders.Infrastructure;

#nullable disable

namespace Orders.Infrastructure.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20251005173049_TradeColumnUpdate")]
    partial class TradeColumnUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Orders.Core.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Asset")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ParentOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TradingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Asset");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("ParentOrderId");

                    b.HasIndex("Role");

                    b.HasIndex("Side");

                    b.HasIndex("Status");

                    b.HasIndex("TradingType");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "Status");

                    b.HasIndex("Asset", "TradingType", "Role", "Status");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Orders.Core.Trade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeBuyer")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("FeeSeller")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("MakerFee")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("MakerFeeRate")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<Guid>("MakerOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MakerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("QuoteQuantity")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<Guid>("SellOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SellerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TakerFee")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TakerFeeRate")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<Guid>("TakerOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TakerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyOrderId");

                    b.HasIndex("BuyerUserId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("MakerOrderId");

                    b.HasIndex("SellOrderId");

                    b.HasIndex("SellerUserId");

                    b.HasIndex("Symbol");

                    b.HasIndex("TakerOrderId");

                    b.HasIndex("BuyOrderId", "CreatedAt");

                    b.HasIndex("BuyerUserId", "CreatedAt");

                    b.HasIndex("MakerOrderId", "CreatedAt");

                    b.HasIndex("SellOrderId", "CreatedAt");

                    b.HasIndex("SellerUserId", "CreatedAt");

                    b.HasIndex("Symbol", "CreatedAt");

                    b.HasIndex("TakerOrderId", "CreatedAt");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("Orders.Core.Trade", b =>
                {
                    b.HasOne("Orders.Core.Order", "BuyOrder")
                        .WithMany()
                        .HasForeignKey("BuyOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Orders.Core.Order", "MakerOrder")
                        .WithMany()
                        .HasForeignKey("MakerOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Orders.Core.Order", "SellOrder")
                        .WithMany()
                        .HasForeignKey("SellOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Orders.Core.Order", "TakerOrder")
                        .WithMany()
                        .HasForeignKey("TakerOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuyOrder");

                    b.Navigation("MakerOrder");

                    b.Navigation("SellOrder");

                    b.Navigation("TakerOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
